<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap" rel="stylesheet">
  <link href="https://fonts.googleapis.com/css2?family=Playfair+Display:ital,wght@0,400..900;1,400..900&display=swap" rel="stylesheet">
</head>

  <title>Appointment Booking</title>

<body>
  <a href="<%= appointments_path %>" class="close-button">X</a>
  <div class="side-bottom-margin-container">
    <div class="appointmentbooking">
      <div id="category-list" class="form-section">
          <h1>How can we assist you today?</h1>
        <div class="booking-index-headings">
        </div>

        <div class="category-card" data-category="admin">
          <i class="fas fa-user-cog"></i>
          <h3>Administrative Issues</h3>
          <p>For any non-clinical or administrative questions or concerns.</p>
        </div>

        <div class="category-card" data-category="test_results">
            <i class="fas fa-file-medical"></i>
            <h3>Test Results</h3>
          <p>Discuss your test results and plan the next steps.</p>
        </div>

        <div class="category-card" data-category="muscles_and_joints">
          <i class="fas fa-bone"></i> <!-- Joint icon -->
          <h3>Muscle and Joint Problems</h3>
          <p>Issues with your back, neck, shoulders, or other muscles and joints.</p>
        </div>

        <div class="category-card" data-category="contraception">
          <i class="fas fa-capsules"></i> <!-- Contraceptive capsules icon -->
          <h3>Contraception</h3>
          <p>Guidance and prescriptions for contraceptive options.</p>
        </div>

        <div class="category-card" data-category="breathing_conditions_and_allergies">
          <i class="fas fa-lungs"></i> <!-- Lungs icon -->
          <h3>Breathing Conditions & Allergies</h3>
          <p>Management of asthma, hay fever, and other breathing-related concerns.</p>
        </div>
        <div class="category-card" data-category="mental_health">
          <h3>Mental Health</h3>
          <p>Advice and support for mental health issues.</p>
        </div>
        <div class="category-card" data-category="prescriptions">
          <h3>Prescriptions</h3>
          <p>Help with new or repeat prescription requests and reviews.</p>
        </div>
        <div class="category-card" data-category="diabetes_care">
          <h3>Diabetes Care</h3>
          <p>Support and advice for diabetes and pre-diabetes management.</p>
        </div>
        <div class="category-card" data-category="cold_cough_flu_sore_throat_and_earaches">
          <h3>Cold, Cough, Flu, Sore Throat & Earaches</h3>
          <p>Help with symptoms like runny nose, fever, sore throat, and ear pain.</p>
        </div>
        <div class="category-card" data-category="skin_issues">
          <h3>Skin Problems</h3>
          <p>Treatment for rashes, acne, eczema, infections, lumps, or moles.</p>
        </div>
        <div class="category-card" data-category="stomach_problems">
          <h3>Stomach Issues</h3>
          <p>Addressing nausea, abdominal pain, bloating, constipation, or diarrhea.</p>
        </div>
        <div class="category-card" data-category="urine_problems">
          <h3>Urinary Problems</h3>
          <p>Trouble with urination, including pain or frequent urination.</p>
        </div>
        <div class="category-card" data-category="travel_health">
          <h3>Travel Health</h3>
          <p>Travel advice and necessary vaccinations for trips abroad.</p>
        </div>
        <div class="category-card" data-category="other">
          <h3>Other Concerns</h3>
          <p>Describe your symptoms if they don't fit into the categories above.</p>
        </div>
      </div>

      <div id="triage-questions" class="form-section">
        <div class="booking-index-headings">
          <h1 id="triage-title"></h1>
        </div>
        <div id="questions-container"></div>
        <button id="submit-triage" class="btn btn-primary">Submit</button>
        <button class="back-button btn btn-secondary">Back</button>
      </div>

      <div id="reason-for-appointment" class="form-section">
        <div class="booking-index-headings">
          <h1>Why would you like an appointment?</h1>
        </div>
        <p>Tell us about your symptoms, condition, or reason for booking (200 characters)</p>
        <textarea id="appointment-reason" maxlength="200" rows="4" class="form-control"></textarea>
        <button id="submit-reason" class="btn btn-primary">Submit</button>
        <button class="back-button btn btn-secondary">Back</button>
      </div>

      <div id="appointment-type-list" class="form-section">
        <div class="text-center">
          <h1>Choose your appointment type</h1>
        </div>
        <div class="d-flex justify-content-around">
          <div class="appointment-type-card card p-3" data-appointment-type="phone">
            <i class="fas fa-phone fa-2x"></i>
            <span>Phone</span>
          </div>
          <div class="appointment-type-card card p-3" data-appointment-type="video">
            <i class="fas fa-video fa-2x"></i>
            <span>Video Call</span>
          </div>
          <div class="appointment-type-card card p-3" data-appointment-type="in-person">
            <i class="fas fa-user fa-2x"></i>
            <span>In-person</span>
          </div>
        </div>
        <button class="back-button btn btn-secondary mt-3">Back</button>
      </div>

      <div id="available-clinicians" class="form-section">
        <div class="text-center">
          <h2>Available Clinicians</h2>
        </div>
        <div id="clinicians-container" class="d-flex flex-wrap justify-content-around">
          <!-- Clinician cards will be inserted here -->
        </div>
        <button class="back-button btn btn-secondary mt-3">Back</button>
      </div>

      <div id="calendar-view" class="form-section">
        <div class="text-center">
          <h2>Select Date and Time</h2>
        </div>
        <input type="text" id="calendar-container" class="form-control mt-3" />
        <div id="available-times" class="d-flex flex-column justify-content-center align-items-center mt-3">
          <!-- Available times will be shown here -->
        </div>
        <button id="close-calendar" class="btn btn-secondary mt-3">Close</button>
        <button class="back-button btn btn-secondary mt-3">Back</button>
      </div>

      <div id="booking-details" class="form-section">
        <div class="text-center">
          <h2>Booking Details</h2>
        </div>
        <div id="details-container" class="mt-3">
          <!-- Booking details will be inserted here -->
        </div>
        <button id="confirm-booking" class="btn btn-primary mt-3">Confirm Booking</button>
        <button class="back-button btn btn-secondary mt-3">Back</button>
      </div>

      <div id="appointment-pending" class="form-section">
        <div class="text-center">
          <h1>Appointment Request Pending</h1>
        </div>
        <p>Thank you for requesting an appointment.</p>
        <p>Your appointment request has been received and is currently pending approval from the clinician.</p>
        <h3>Additional Information:</h3>
        <p>Pending Approval: Your requested appointment is awaiting confirmation from the clinician. You will receive an update as soon as your appointment status changes.</p>
        <h3>Need to make changes?</h3>
        <p>If you need to modify or cancel your appointment request, you can do this within the 'My Appointments' section</p>
        <footer>
          <p>Please note that the availability of appointments may vary based on clinician schedules.</p>
        </footer>
      </div>
    </div>
  </div>

  <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
  <script src="https://kit.fontawesome.com/a076d05399.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const categoryList = document.getElementById('category-list');
      const triageQuestions = document.getElementById('triage-questions');
      const triageTitle = document.getElementById('triage-title');
      const questionsContainer = document.getElementById('questions-container');
      const reasonForAppointment = document.getElementById('reason-for-appointment');
      const appointmentTypeList = document.getElementById('appointment-type-list');
      const availableClinicians = document.getElementById('available-clinicians');
      const cliniciansContainer = document.getElementById('clinicians-container');
      const calendarView = document.getElementById('calendar-view');
      const calendarContainer = document.getElementById('calendar-container');
      const availableTimes = document.getElementById('available-times');
      const closeCalendarButton = document.getElementById('close-calendar');
      const bookingDetails = document.getElementById('booking-details');
      const detailsContainer = document.getElementById('details-container');
      const confirmBookingButton = document.getElementById('confirm-booking');
      const backButtons = document.querySelectorAll('.back-button');
      const closeButton = document.querySelector('.close-button');
      const appointmentPending = document.getElementById('appointment-pending');
      const submitTriageButton = document.getElementById('submit-triage');

      let selectedClinician = '';
      let selectedDate = '';
      let selectedTime = '';
      let historyStack = [];

      const triageData = {
        'admin': ['Question 1 for Admin?', 'Question 2 for Admin?', 'Question 3 for Admin?', 'Question 4 for Admin?'],
        'test_results': ['Question 1 for Test Results?', 'Question 2 for Test Results?', 'Question 3 for Test Results?', 'Question 4 for Test Results?'],
        'muscles_and_joints': ['Question 1 for Muscles and Joints?', 'Question 2 for Muscles and Joints?', 'Question 3 for Muscles and Joints?', 'Question 4 for Muscles and Joints?'],
        'contraception': ['Question 1 for Contraception?', 'Question 2 for Contraception?', 'Question 3 for Contraception?', 'Question 4 for Contraception?'],
        'breathing_conditions_and_allergies': ['Question 1 for Breathing conditions & Allergies?', 'Question 2 for Breathing conditions & Allergies?', 'Question 3 for Breathing conditions & Allergies?', 'Question 4 for Breathing conditions & Allergies?'],
        'mental_health': ['Question 1 for Mental health?', 'Question 2 for Mental health?', 'Question 3 for Mental health?', 'Question 4 for Mental health?'],
        'prescriptions': ['Question 1 for Prescriptions?', 'Question 2 for Prescriptions?', 'Question 3 for Prescriptions?', 'Question 4 for Prescriptions?'],
        'diabetes_care': ['Question 1 for Diabetes Care?', 'Question 2 for Diabetes Care?', 'Question 3 for Diabetes Care?', 'Question 4 for Diabetes Care?'],
        'cold_cough_flu_sore_throat_and_earaches': ['Question 1 for Cold, cough, flu, sore throat & Earaches?', 'Question 2 for Cold, cough, flu, sore throat & Earaches?', 'Question 3 for Cold, cough, flu, sore throat & Earaches?', 'Question 4 for Cold, cough, flu, sore throat & Earaches?'],
        'skin_issues': ['Question 1 for Skin issues?', 'Question 2 for Skin issues?', 'Question 3 for Skin issues?', 'Question 4 for Skin issues?'],
        'stomach_problems': ['Question 1 for Stomach problems?', 'Question 2 for Stomach problems?', 'Question 3 for Stomach problems?', 'Question 4 for Stomach problems?'],
        'urine_problems': ['Question 1 for Urine problems?', 'Question 2 for Urine problems?', 'Question 3 for Urine problems?', 'Question 4 for Urine problems?'],
        'travel_health': ['Question 1 for Travel health?', 'Question 2 for Travel health?', 'Question 3 for Travel health?', 'Question 4 for Travel health?'],
        'other': ['Question 1 for Other?', 'Question 2 for Other?', 'Question 3 for Other?', 'Question 4 for Other?']
      };

      const cliniciansData = {
        'phone': [
          { name: 'Clinician 1', times: ['8:00am', '10:00am', '1:00pm'] },
          { name: 'Clinician 2', times: ['9:00am', '11:00am', '2:00pm'] },
        ],
        'video': [
          { name: 'Clinician 3', times: ['8:30am', '10:30am', '1:30pm'] },
          { name: 'Clinician 4', times: ['9:30am', '11:30am', '2:30pm'] },
        ],
        'in-person': [
          { name: 'Clinician 5', times: ['8:45am', '10:45am', '1:45pm'] },
          { name: 'Clinician 6', times: ['9:45am', '11:45am', '2:45pm'] },
        ],
      };

      function showForm(form) {
        const forms = [categoryList, triageQuestions, reasonForAppointment, appointmentTypeList, availableClinicians, calendarView, bookingDetails, appointmentPending];
        forms.forEach(f => f.style.display = 'none');
        form.style.display = 'flex';

        if (historyStack.length === 0 || historyStack[historyStack.length - 1] !== form) {
          historyStack.push(form);
        }

        if (historyStack.length > 1) {
          backButtons.forEach(btn => btn.style.display = 'inline-block');
        } else {
          backButtons.forEach(btn => btn.style.display = 'none');
        }
      }

      function handleBackButtonClick() {
        if (historyStack.length > 1) {
          historyStack.pop(); // Remove current form
          const previousForm = historyStack[historyStack.length - 1];
          showForm(previousForm);
        }
      }

      function handleCategoryCardClick(event) {
        const categoryCard = event.target.closest('.category-card');
        if (categoryCard) {
          const category = categoryCard.getAttribute('data-category');
          const questions = triageData[category];

          triageTitle.textContent = categoryCard.querySelector('h3').textContent;
          questionsContainer.innerHTML = '';

          questions.forEach((question, index) => {
            const questionElement = document.createElement('div');
            questionElement.className = 'question';
            questionElement.textContent = question;

            const buttonsContainer = document.createElement('div');
            buttonsContainer.className = 'question-buttons';

            const yesButton = document.createElement('button');
            yesButton.textContent = 'Yes';
            yesButton.setAttribute('data-answer', 'yes');
            yesButton.classList.add('btn', 'btn-outline-primary', 'mr-2');

            const noButton = document.createElement('button');
            noButton.textContent = 'No';
            noButton.setAttribute('data-answer', 'no');
            noButton.classList.add('btn', 'btn-outline-secondary');

            yesButton.addEventListener('click', () => {
              questionElement.setAttribute('data-answered', 'true');
              yesButton.classList.add('selected');
              noButton.classList.remove('selected');
            });

            noButton.addEventListener('click', () => {
              questionElement.setAttribute('data-answered', 'true');
              noButton.classList.add('selected');
              yesButton.classList.remove('selected');
            });

            buttonsContainer.appendChild(yesButton);
            buttonsContainer.appendChild(noButton);

            questionElement.appendChild(buttonsContainer);
            questionsContainer.appendChild(questionElement);
          });

          showForm(triageQuestions);
        }
      }

      function handleSubmitTriage() {
        const allAnswered = [...questionsContainer.querySelectorAll('.question')].every(question => question.getAttribute('data-answered') === 'true');

        if (allAnswered) {
          showForm(reasonForAppointment);
        } else {
          alert('Please answer all triage questions before proceeding.');
        }
      }

      function handleSubmitReason() {
        const appointmentReason = document.getElementById('appointment-reason').value.trim();
        if (appointmentReason) {
          showForm(appointmentTypeList);
        } else {
          alert('Please provide a reason for your appointment.');
        }
      }

      function handleAppointmentTypeCardClick(event) {
        const appointmentTypeCard = event.target.closest('.appointment-type-card');
        if (appointmentTypeCard) {
          const appointmentType = appointmentTypeCard.getAttribute('data-appointment-type');
          const clinicians = cliniciansData[appointmentType];

          cliniciansContainer.innerHTML = '';

          clinicians.forEach(clinician => {
            const clinicianCard = document.createElement('div');
            clinicianCard.className = 'clinician-card card mb-3';

            const clinicianName = document.createElement('div');
            clinicianName.textContent = clinician.name;
            clinicianName.className = 'card-header';
            clinicianCard.appendChild(clinicianName);

            const times = document.createElement('div');
            times.className = 'card-body';
            clinician.times.forEach(time => {
              const timeSlot = document.createElement('div');
              timeSlot.textContent = time;
              timeSlot.className = 'time-slot btn btn-light mb-2';
              timeSlot.addEventListener('click', () => {
                showBookingDetails(clinician.name, '', time);
              });
              times.appendChild(timeSlot);
            });

            const moreButton = document.createElement('div');
            moreButton.textContent = 'More';
            moreButton.className = 'more-button btn btn-secondary mt-2';
            moreButton.addEventListener('click', () => {
              showCalendarView(clinician.name);
            });
            times.appendChild(moreButton);

            clinicianCard.appendChild(times);
            cliniciansContainer.appendChild(clinicianCard);
          });

          showForm(availableClinicians);
        }
      }

      function showCalendarView(clinicianName) {
        flatpickr(calendarContainer, {
          onChange: function(selectedDates, dateStr, instance) {
            const availableTimesData = getAvailableTimesForClinicianOnDate(clinicianName, dateStr);
            displayAvailableTimes(availableTimesData, clinicianName, dateStr);
          }
        });

        showForm(calendarView);
      }

      function displayAvailableTimes(times, clinicianName, dateStr) {
        availableTimes.innerHTML = '';
        times.forEach(time => {
          const timeSlot = document.createElement('div');
          timeSlot.textContent = time;
          timeSlot.className = 'time-slot btn btn-light mb-2';
          timeSlot.addEventListener('click', () => {
            showBookingDetails(clinicianName, dateStr, time);
          });
          availableTimes.appendChild(timeSlot);
        });
      }

      function getAvailableTimesForClinicianOnDate(clinicianName, dateStr) {
        // Mock data, replace with actual fetch from server
        return ['8:00am', '10:00am', '1:00pm', '3:00pm'];
      }

      function showBookingDetails(clinicianName, dateStr, time) {
        selectedClinician = clinicianName;
        selectedDate = dateStr;
        selectedTime = time;

        detailsContainer.innerHTML = `
          <p><strong>Clinician:</strong> ${clinicianName}</p>
          <p><strong>Date:</strong> ${dateStr || 'Not selected'}</p>
          <p><strong>Time:</strong> ${time}</p>
        `;

        showForm(bookingDetails);
      }

      function handleConfirmBooking() {
        alert(`Booking confirmed with ${selectedClinician} on ${selectedDate} at ${selectedTime}`);
        // Handle the booking confirmation logic here
        showForm(appointmentPending);
      }

      categoryList.addEventListener('click', handleCategoryCardClick);
      submitTriageButton.addEventListener('click', handleSubmitTriage);
      document.getElementById('submit-reason').addEventListener('click', handleSubmitReason);
      appointmentTypeList.addEventListener('click', handleAppointmentTypeCardClick);
      closeCalendarButton.addEventListener('click', () => showForm(availableClinicians));
      confirmBookingButton.addEventListener('click', handleConfirmBooking);
      backButtons.forEach(btn => btn.addEventListener('click', handleBackButtonClick));

      showForm(categoryList); // Display the category list form by default
    });
  </script>
</body>
</html>
